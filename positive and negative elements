#include <stdio.h>
#include<stdlib.h>
int segregate(int arr[], int size) {
    int j = 0, i;
    for (i = 0; i < size; i++) {
        if (arr[i] <= 0) {
            int temp = arr[i];
            arr[i] = arr[j];
            arr[j] = temp;
            j++; 
        }
    }
    return j;
}

int findMissingPositive(int arr[], int size) {
    int i;

    for (i = 0; i < size; i++) {
        if (abs(arr[i]) - 1 < size && arr[abs(arr[i]) - 1] > 0)
            arr[abs(arr[i]) - 1] = -arr[abs(arr[i]) - 1];
    }

    for (i = 0; i < size; i++)
        if (arr[i] > 0)
            return i + 1;

    return size + 1;
}

int findMissing(int arr[], int size) {
    int shift = segregate(arr, size);

    return findMissingPositive(arr + shift, size - shift);
}

int main() {
    int arr1[] = {2, 3, 7, 6, 8, -1, -10, 15};
    int size1 = sizeof(arr1) / sizeof(arr1[0]);
    printf("The smallest positive missing number is %d\n", findMissing(arr1, size1));

    int arr2[] = {2, 3, -7, 6, 8, 1, -10, 15};
    int size2 = sizeof(arr2) / sizeof(arr2[0]);
    printf("The smallest positive missing number is %d\n", findMissing(arr2, size2));

    return 0;
}
